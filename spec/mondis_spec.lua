local mondis = require 'mondis'
local redis = require 'redis'

describe('mondis', function()
  local db, red
  before_each(function()
    red = redis.connect('127.0.0.1', 6379)
    db  = mondis.connect(red)
  end)
  after_each(function()
    db:dropDatabase()
    red:quit()
  end)

  describe('db', function()
    describe(':getCollectionNames', function()
      it('is initially empty', function()
        assert.same({}, db:getCollectionNames())
      end)
      it('returns the created collections', function()
        db:createCollection('users')
        db:createCollection('projects')
        assert.same({'projects', 'users'}, db:getCollectionNames())
      end)
    end)

    describe(':getCollection', function()
      describe('when the collection does not exist', function()
        it('does not return the same reference when called twice', function()
          assert.not_equal(db:getCollection('users'), db:getCollection('users'))
        end)
      end)
      describe('when the collection exists', function()
        it('returns the same reference when called twice', function()
          db:createCollection('users')
          assert.equal(db:getCollection('users'), db:getCollection('users'))
        end)
      end)
    end)

    describe('.<collectionname>', function()
      describe('when the collection does not exist', function()
        it('does not return the same reference when called twice', function()
          assert.not_equal(db.users, db.users)
        end)
      end)
      describe('when the collection exists', function()
        it('returns the same reference when called twice', function()
          db:createCollection('users')
          assert.equal(db.users, db.users)
        end)
      end)
    end)

  end) -- DB

  describe('Collection', function()

    describe(':exists', function()
      describe('when nothing has been done on the table', function()
        it('returns false', function()
          assert.is_false(db.users:exists())
        end)
      end)
      describe('when the table has been created with createCollection', function()
        it('returns true', function()
          db:createCollection('users')
          assert.is_true(db.users:exists())
        end)
      end)
    end)

  end)
end)

